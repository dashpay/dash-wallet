apply plugin: 'com.android.application'
apply plugin: 'project-report'

ext {
    archivesBaseName = 'dash-wallet'
    androidSupportVersion = '29.0.0'
    lifecycleVersion = "2.2.0"
}
repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }


}

dependencies {
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation(project(':integration-android')) {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation('androidx.legacy:legacy-support-v13:1.0.0') {
        exclude(group: 'com.android.support', module: 'support-fragment')
        exclude(group: 'com.android.support', module: 'support-media-compat')
    }
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.work:work-runtime-ktx:2.4.0"
    implementation "org.dashj:dashj-core:$dashjVersion"
    implementation 'org.dashj.platform:dashpay:0.20-SNAPSHOT'
    implementation 'org.dashj.platform:platform-core:0.20-SNAPSHOT'
    implementation 'org.dashj.platform:dpp:0.20-SNAPSHOT'
    implementation 'org.dashj.platform:dapi-client:0.20-SNAPSHOT'
    implementation 'org.dashj:dashj-merk:0.20-SNAPSHOT'
    implementation 'org.dashj.android:dashj-merk:0.20-SNAPSHOT'
    implementation 'io.grpc:grpc-stub:1.28.0' // CURRENT_GRPC_VERSION
    implementation "org.dashj.android:dashj-bls-android:0.18"
    implementation "org.dashj.android:dashj-x11-android:0.17.5"
    implementation "org.dashj.android:dashj-scrypt-android:0.17.5"
    implementation 'com.google.guava:guava:29.0-android'
    implementation 'com.google.zxing:core:3.3.3'    // 3.3.3 is the maximum to support Android 4.4 to 6.x
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    implementation 'com.squareup.moshi:moshi:1.11.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.11.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'
    implementation 'com.sambarboza:orbitview:0.2.0'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    implementation project(path: ':common')
    implementation 'com.google.android.gms:play-services-auth:18.1.0'

    def room_version = "2.2.5"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //Uphold Integration
    implementation project(path: ':uphold-integration')

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.github.MikeOrtiz:TouchImageView:3.0.3'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.1.1')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-inappmessaging-display'
    implementation 'com.google.firebase:firebase-dynamic-links'

    // Declare the dependency for the Performance Monitoring library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    //implementation 'com.google.firebase:firebase-perf-ktx'

    // Google Drive Dependencies
    implementation ('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    implementation ('com.google.apis:google-api-services-drive:v3-rev173-1.25.0') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }

    implementation ('com.google.http-client:google-http-client-gson:1.26.0') { // do we need this
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation 'com.jakewharton:process-phoenix:2.0.0'

    testImplementation 'junit:junit:4.13'
    //Espresso
    androidTestImplementation ('androidx.test:runner:1.3.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.3.0') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test.espresso:espresso-intents:3.3.0') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}


ext {
    archivesBaseName = 'dash-wallet'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def props = new Properties()
if (file("../local.properties").exists()) {
    file("../local.properties").withInputStream { props.load(it) }
}

android {
    compileSdkVersion 29
    android.ndkVersion '21.3.6528147'

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        multiDexEnabled true
        generatedDensities = ['hdpi', 'xhdpi']
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('keystore/debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        all {
            def imgurClientId = props.getProperty("IMGUR_CLIENT_ID")
            def imgurClientSecret = props.getProperty("IMGUR_CLIENT_SECRET")
            if (imgurClientId == null) {
                imgurClientId = "\"IMGUR_CLIENT_ID\""
            }
            if (imgurClientSecret == null) {
                imgurClientSecret = "\"IMGUR_CLIENT_SECRET\""
            }
            buildConfigField("String", "IMGUR_CLIENT_ID", imgurClientId)
            buildConfigField("String", "IMGUR_CLIENT_SECRET", imgurClientSecret)
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg', 'proguardTest-rules.txt'
        }
        debug {
            multiDexEnabled true
            debuggable true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = ['test']
            resources.srcDirs = ['test']
        }
        androidTest {
            java.srcDirs = ['androidTest']
            resources.srcDirs = ['androidTest/java']
            res.srcDirs = ['androidTest/testNet3/res']
        }
        _testNet3 {
            res.srcDirs = ["testNet3/res"]
        }
        staging {
            res.srcDirs = ["staging/res"]
        }
        beta {
            res.srcDirs = ["beta/res"]
        }
        devNet {
            res.srcDirs = ["devNet/res"]
        }
        schnapps {
            res.srcDirs = ["schnapps/res"]
        }
        evonet {
            res.srcDirs = ["evonet/res"]
        }
        mobile {
            res.srcDirs = ["mobile/res"]
            resources.srcDirs = ["mobile/resources"]
        }
    }
    flavorDimensions "default"
    productFlavors {
        beta {
            applicationId = "hashengineering.dash.wallet.beta"
        }
        prod {
            applicationId = "hashengineering.darkcoin.wallet"
        }
        _testNet3 {
            applicationId = "hashengineering.darkcoin.wallet_test"
        }
        staging {
            applicationId = "org.dash.dashpay.testnet"
        }
        devNet {
            applicationId = "hashengineering.darkcoin.wallet.devnet"
        }
        schnapps {
            applicationId = "org.dash.dashpay.schnapps"
        }
        evonet {
            applicationId = "hashengineering.darkcoin.wallet.evonet"
        }
        mobile {
            applicationId = "hashengineering.darkcoin.wallet.mobile"
        }
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixPatterns.gwt.xml'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixType.gwt.xml'
        exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'org.bitcoin.production.checkpoints.txt'
        exclude 'org.bitcoin.test.checkpoints.txt'
        exclude 'google/protobuf/*.proto'
        exclude 'META-INF/DEPENDENCIES'
    }
    dexOptions {
        preDexLibraries true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
